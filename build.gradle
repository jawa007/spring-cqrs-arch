plugins {
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.4'
    id "com.jfrog.bintray" version "1.8.4"
}


// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'

coveralls {
    sourceDirs = files(subprojects.sourceSets.main.allSource.srcDirs).files.absolutePath
}


jacoco {
        toolVersion = '0.8.4'
}

javadoc {
    source = sourceSets.main.allJava
}

jacocoTestReport {
        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = false
        }
}


// Create the pom configuration:
def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "sleroy"
            name "Sylvain Leroy"
            email "contact@sylvainleroy.com"
        }
    }
    
    scm {
       url "https://github.com/spring-cqrs-arch"
    }
}

publishing {
    publications {
        BintrayPublication(MavenPublication) {
            from components.java
            afterEvaluate {
                artifact sourcesJar
                artifact javadocJar
            }

            groupId 'com.byoskill.spring.cqrs'
            artifactId 'spring-cqrs-module'
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'CQRS Module for Spring')
                root.appendNode('name', 'spring-cqrs-module')
                root.appendNode('url', 'https://sylvainleroy.com')
                root.children().last() + pomConfig
            }
        }
    }
}




bintray {
 	user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
	key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
	publications = ['BintrayPublication']
	pkg {
		repo = 'maven'
		name = 'spring-cqrs-module'
		userOrg = user
		licenses = ['Apache-2.0']
		vcsUrl = 'https://github.com/bintray/gradle-bintray-plugin.git'
		labels = ['java', 'cqrs', 'spring', 'event']
		publicDownloadNumbers = true
		version {
			name = project.version
			desc = 'Module for Spring to program microservices as CQRS Architecture'
			released  = new Date()			
		}
	}
}




// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
    maven { url "https://dl.bintray.com/tocea/spring-cqrs-arch" } 
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile "org.slf4j:slf4j-api:$SLF4J_VERSION"
    compile group: 'org.apache.commons', name: 'commons-lang3', version: COMMONS_LANG3
	compile group: 'com.google.guava', name: 'guava', version: '23.5-jre'
	compile group: 'javax.el', name: 'javax.el-api', version: '3.0.0'
	compile group: 'org.glassfish', name: 'javax.el', version: '3.0.1-b08'
    
    
	compileOnly group: 'org.springframework', name: 'spring-beans', version: SPRING_VERSION
	compileOnly group: 'org.springframework', name: 'spring-context', version: SPRING_VERSION
	compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: JACKSON
	compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: JACKSON
	compileOnly group: 'org.hibernate.validator', name: 'hibernate-validator', version: VALIDATOR
	
	
	
	testCompile group: 'org.mockito', name: 'mockito-all', version: MOCKITO	
	testCompile group: 'org.springframework', name: 'spring-beans', version: SPRING_VERSION
	testCompile group: 'org.springframework', name: 'spring-context', version: SPRING_VERSION
	testCompile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: JACKSON
	testCompile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: JACKSON
	testCompile group: 'org.hibernate.validator', name: 'hibernate-validator', version: VALIDATOR	
	testCompile group: 'ch.qos.logback', name: 'logback-classic', version: LOGBACK

	// https://mvnrepository.com/artifact/org.springframework/spring-test
    testCompile group: 'org.springframework', name: 'spring-test', version: SPRING_VERSION
	
    testCompile "junit:junit:$JUNIT_VERSION"
}

task jacocoRootReport(type: org.gradle.testing.jacoco.tasks.JacocoReport) {
    dependsOn = subprojects.test
    sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories =  files(subprojects.sourceSets.main.output)
    executionData = files(subprojects.jacocoTestReport.executionData)
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
